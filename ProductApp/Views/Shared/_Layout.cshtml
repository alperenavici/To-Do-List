<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Task Manager</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
    <link rel="stylesheet" href="~/css/site.css" />
    <link rel="stylesheet" href="~/css/animations.css" />
    <link rel="stylesheet" href="~/css/calendar.css" />
    <link rel="stylesheet" href="~/css/particles.css" />
    <link rel="stylesheet" href="~/css/tasks.css" />
    <style>
        :root {
            --primary-color: #3498db;
            --primary-dark: #2980b9;
            --success-color: #2ecc71;
            --danger-color: #e74c3c;
            --warning-color: #f39c12;
            --light-bg: #f8f9fa;
            --dark-bg: #343a40;
            --animation-timing: 0.3s ease;
        }
        
        body {
            margin: 0;
            color: var(--dark-text);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            overflow-x: hidden;
            position: relative;
            background-color: #0d1117;
            /* Hardware acceleration için */
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }
        
        /* Animated background */
        .bg-animation-wrapper {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            overflow: hidden;
            will-change: transform; /* Hardware acceleration */
        }
        
        .bg-gradient {
            position: absolute;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, rgba(13, 17, 23, 0.9), rgba(22, 27, 34, 0.9));
            opacity: 0.8;
        }
        
        .particles {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
        }
        
        .particle {
            position: absolute;
            border-radius: 50%;
            opacity: 0.08;
            pointer-events: none;
            will-change: transform; /* Hardware acceleration */
            transform: translateZ(0); /* Force GPU rendering */
        }
        
        /* Predefined particle animations */
        .particle-1 { animation: floating1 60s infinite ease-in-out; }
        .particle-2 { animation: floating2 70s infinite ease-in-out; }
        .particle-3 { animation: floating3 80s infinite ease-in-out; }
        .particle-4 { animation: floating4 90s infinite ease-in-out; }
        .particle-5 { animation: floating5 100s infinite ease-in-out; }
        
        .navbar {
            background: linear-gradient(135deg, #161b22, #0d1117);
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
            padding: 0.8rem 1rem;
            position: relative;
            z-index: 10;
            border-bottom: 1px solid rgba(255, 255, 255, 0.05);
        }
        
        .navbar-brand {
            color: white !important;
            font-weight: 600;
            font-size: 1.5rem;
            letter-spacing: 0.5px;
            position: relative;
            overflow: hidden;
        }
        
        .navbar-brand::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 0;
            height: 2px;
            background-color: var(--primary-color);
            transition: width var(--animation-timing);
        }
        
        .navbar-brand:hover::after {
            width: 100%;
        }
        
        .content-wrapper {
            flex: 1;
            padding: 2rem 0;
            position: relative;
            z-index: 1;
        }
        
        .page-title {
            color: var(--primary-color);
            font-weight: 600;
            margin-bottom: 1.5rem;
            position: relative;
            padding-bottom: 10px;
        }
        
        .page-title::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 60px;
            height: 4px;
            background-color: var(--primary-color);
            border-radius: 2px;
        }
        
        .card {
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
            border: 1px solid rgba(255, 255, 255, 0.05);
            overflow: hidden;
            transition: transform var(--animation-timing), box-shadow var(--animation-timing);
            background-color: #161b22;
            backdrop-filter: blur(5px);
            transform: translateZ(0); /* Force GPU rendering */
            will-change: transform, box-shadow; /* Hardware acceleration */
        }
        
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
        }
        
        .card-header {
            background-color: rgba(13, 17, 23, 0.7);
            border-bottom: 1px solid rgba(255, 255, 255, 0.05);
            font-weight: 600;
            padding: 1rem 1.5rem;
            color: var(--dark-text);
        }
        
        .btn {
            border-radius: 6px;
            padding: 0.5rem 1.5rem;
            font-weight: 500;
            transition: all var(--animation-timing);
            position: relative;
            overflow: hidden;
            z-index: 1;
            backface-visibility: hidden; /* Daha yumuşak geçişler için */
        }
        
        .btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 0;
            height: 100%;
            background-color: rgba(255, 255, 255, 0.1);
            transition: width var(--animation-timing);
            z-index: -1;
        }
        
        .btn:hover::before {
            width: 100%;
        }
        
        .btn:active {
            transform: scale(0.95);
        }
        
        .btn-primary {
            background-color: #3282b8;
            border-color: #3282b8;
            box-shadow: 0 2px 5px rgba(50, 130, 184, 0.3);
        }
        
        .btn-primary:hover {
            background-color: #286090;
            border-color: #286090;
        }
        
        .btn-success {
            background-color: #28a745;
            border-color: #28a745;
            box-shadow: 0 2px 5px rgba(40, 167, 69, 0.3);
        }
        
        .btn-success:hover {
            background-color: #218838;
            border-color: #1e7e34;
        }
        
        footer {
            background-color: #0d1117;
            color: rgba(255, 255, 255, 0.5);
            padding: 1.5rem 0;
            margin-top: auto;
            position: relative;
            z-index: 10;
            border-top: 1px solid rgba(255, 255, 255, 0.05);
        }
        
        .form-control {
            border-radius: 6px;
            padding: 0.6rem 1rem;
            border: 1px solid rgba(255, 255, 255, 0.1);
            transition: all var(--animation-timing);
            background-color: rgba(13, 17, 23, 0.8);
            backdrop-filter: blur(5px);
            color: var(--dark-text);
        }
        
        .form-control:focus {
            box-shadow: 0 0 0 0.2rem rgba(50, 130, 184, 0.25);
            border-color: #3282b8;
            background-color: rgba(22, 27, 34, 0.9);
        }
        
        .list-group-item {
            transition: all var(--animation-timing);
            background-color: #161b22;
            backdrop-filter: blur(5px);
            border-color: rgba(255, 255, 255, 0.05);
            color: var(--dark-text);
        }
        
        .list-group-item:hover {
            background-color: #1c242f !important;
        }
        
        /* Animation classes */
        .animate__animated {
            animation-duration: 0.6s !important; /* Daha hızlı */
            animation-fill-mode: both;
        }
        
        .fade-in {
            animation: fadeIn 0.6s;
        }
        
        .slide-in-left {
            animation: slideInLeft 0.6s;
        }
        
        .slide-in-right {
            animation: slideInRight 0.6s;
        }
        
        .bounce-in {
            animation: bounceIn 0.6s;
        }
    </style>
</head>
<body>
    <div class="bg-animation-wrapper">
        <div class="bg-gradient"></div>
        <div class="particles" id="particles"></div>
    </div>

    <header>
        <nav class="navbar navbar-expand-lg navbar-dark">
            <div class="container">
                <a class="navbar-brand" asp-controller="Tasks" asp-action="Index">
                    <i class="fas fa-tasks me-2"></i>Task Manager
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav ms-auto">
                        <li class="nav-item">
                            <a class="nav-link text-white" asp-controller="Tasks" asp-action="Index">
                                <i class="fas fa-home me-1"></i> Home
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <div class="content-wrapper">
        <div class="container">
            <main role="main">
                @RenderBody()
            </main>
        </div>
    </div>

    <footer>
        <div class="container text-center">
            <p class="mb-0">&copy; @DateTime.Now.Year - Task Manager Application</p>
        </div>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    
    <script>
        // Animated particles background with predefined animations
        document.addEventListener('DOMContentLoaded', function() {
            // Optimize animation performance
            const optimizeAnimations = () => {
                document.body.classList.add('optimize-animations');
                
                // Reduce particle count on mobile devices
                const isMobile = window.innerWidth < 768;
                return isMobile ? 15 : 30;
            };
            
            const particleCount = optimizeAnimations();
            const particles = document.getElementById('particles');
            const colors = ['#3282b8', '#1a4669', '#224457', '#28a745', '#1e5a2a'];
            
            // Clear existing particles
            particles.innerHTML = '';
            
            // Create particles with a more efficient approach
            const fragment = document.createDocumentFragment();
            
            for (let i = 0; i < particleCount; i++) {
                const particle = document.createElement('div');
                particle.className = 'particle particle-' + (i % 5 + 1);
                
                // Random properties
                const size = Math.random() * (isMobile ? 8 : 12) + 4;
                const color = colors[Math.floor(Math.random() * colors.length)];
                
                particle.style.width = `${size}px`;
                particle.style.height = `${size}px`;
                particle.style.backgroundColor = color;
                
                // Random position
                const posX = Math.random() * 100;
                const posY = Math.random() * 100;
                particle.style.left = `${posX}%`;
                particle.style.top = `${posY}%`;
                
                fragment.appendChild(particle);
            }
            
            particles.appendChild(fragment);
            
            // Staggered animations for elements
            const animateElements = document.querySelectorAll('.card, .btn');
            const applyAnimations = () => {
                animateElements.forEach((element, index) => {
                    // Stagger the animations
                    setTimeout(() => {
                        // Remove any existing animation classes first
                        element.classList.remove('animate__animated', 'animate__fadeInUp');
                        
                        // Force a reflow before adding new animation classes
                        void element.offsetWidth;
                        
                        element.classList.add('animate__animated', 'animate__fadeInUp');
                    }, index * 50); // Shorter delays between elements
                });
            };
            
            // Apply animations with a slight delay
            setTimeout(applyAnimations, 100);
        });
    </script>
    
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html> 